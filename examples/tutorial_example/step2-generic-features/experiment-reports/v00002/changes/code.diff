diff -ENwbur ../v00002/code/application.conf ./code/application.conf
--- ../v00002/code/application.conf	2014-12-19 18:11:26.000000000 -0800
+++ ./code/application.conf	2014-12-19 19:54:45.000000000 -0800
@@ -103,9 +103,10 @@
           AND   has_spouse.sentence_id = sentences.sentence_id;
         """
       output_relation: "has_spouse_features"
-      udf: ${APP_HOME}"/udf/ext_has_spouse_features.py"
+      udf: pypy ${APP_HOME}"/udf/ext_has_spouse_features.py"
       dependencies: ["ext_has_spouse_candidates"]
       style: "tsv_extractor"
+      parallelism: 4
     }
 
   }
diff -ENwbur ../v00002/code/udf/ext_has_spouse_features.py ./code/udf/ext_has_spouse_features.py
--- ../v00002/code/udf/ext_has_spouse_features.py	2014-12-19 18:11:26.000000000 -0800
+++ ./code/udf/ext_has_spouse_features.py	2014-12-19 19:54:45.000000000 -0800
@@ -1,10 +1,15 @@
 #! /usr/bin/env python
 
-import sys
+import sys, os
 import ddlib     # DeepDive python utility
 
 ARR_DELIM = '~^~'
 
+# Load keyword dictionaries using ddlib, for domain-specific features
+BASE_DIR = os.path.dirname(os.path.realpath(__file__))
+ddlib.load_dictionary(BASE_DIR + "/dicts/married.txt", dict_id="married")
+ddlib.load_dictionary(BASE_DIR + "/dicts/non_married.txt", dict_id="non_married")
+
 # For each input tuple
 for row in sys.stdin:
   parts = row.strip().split('\t')
@@ -23,12 +28,14 @@
     [0, ] * len(words),  [0, ] * len(words), words, lemmas, poses,
     dependencies, ners)
 
-  # Unpack input into tuples.
+  # Create two spans of person mentions
   span1 = ddlib.Span(begin_word_id=p1_start, length=p1_length)
   span2 = ddlib.Span(begin_word_id=p2_start, length=p2_length)
 
   # Features for this pair come in here
   features = set()
+
+  # Get generic features generated by ddlib
   for feature in ddlib.get_generic_features_relation(sentence, span1, span2):
     features.add(feature)
   for feature in features:
