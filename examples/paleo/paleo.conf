# Database Configuration
# ==================================================

global.connection.host : "localhost"
global.connection.port : 5432
global.connection.db : "paleo_deepdive"
global.connection.user : ""
global.connection.password : ""

# Schema Definition
# ==================================================

relations.documents.schema: {
  varid: Integer, 
  meta: Text
}

relations.sentences.schema: {
  varid: Integer, 
  document_id: Integer, 
  index: Integer, 
  words: Text, 
  is_paper_body: Boolean, 
  is_section_header: Boolean, 
  is_systematic: Boolean,
  meta: Text
}

relations.taxonomy_entities.schema: {  
  varid: Integer,
  entity_name: String,
  phrase: String,
  sentence_id: Integer,
  meta: Text
}

relations.entities_temporal.schema: {  
  varid: Integer,
  entity_name: String,
  phrase: String,
  sentence_id: Integer,
  meta: Text
}

relations.belongs_to_relations.schema: {  
  varid: Integer,
  entity1_id: Integer,
  entity2_id: Integer,
  dep_path: String,
  meta: Text
}

# ETL
# ==================================================

ingest.documents.source: "data/documents.tsv"
ingest.sentences.source:"data/sentences.tsv"


# Extractors
# ==================================================

extraction.taxonomy.output_relation: "taxonomy_entities"
extraction.taxonomy.input: "SELECT * FROM sentences"
extraction.taxonomy.udf: "udf/taxonomy.py"
extraction.taxonomy.factor.name: "Taxonomy"
extraction.taxonomy.factor.function: "Imply()"
extraction.taxonomy.factor.weight: 1

extraction.temporal.output_relation: "temporal_entities"
extraction.temporal.input: "SELECT * FROM sentences"
extraction.temporal.udf: "udf/temporal.py"
extraction.temporal.factor.name: "Temporal"
extraction.temporal.factor.function: "Imply()"
extraction.temporal.factor.weight: 1

extraction.belongs_to.output_relation: "belongs_to_relations"
extraction.belongs_to.input: "SELECT * FROM taxonomy_entities e1 JOIN taxonomy_entities e2 ON e1.sentence_id = e2.sentence_id"
extraction.belongs_to.udf: "udf/relations.py"
extraction.belongs_to.factor.name: "BelongsTo"
extraction.belongs_to.factor.function: "Imply(entity1, entity2)"
extraction.belongs_to.factor.weight: "?(dep_path)"


# Evidence
# ==================================================

# TODO



